#set_false_path -to [get_pins {gtwizard_0_exdes_i/gt0_txfsmresetdone_r2_reg/CLR gtwizard_0_exdes_i/gt0_txfsmresetdone_r_reg/CLR}]
#set_false_path -to [get_pins {gtwizard_0_exdes_i/gt0_txfsmresetdone_r2_reg/D gtwizard_0_exdes_i/gt0_txfsmresetdone_r_reg/D}]
################################################################################
##   ____  ____
##  /   /\/   /
## /___/  \  /    Vendor: Xilinx
## \   \   \/     Version : 3.6
##  \   \         Application : 7 Series FPGAs Transceivers Wizard
##  /   /         Filename : gtwizard_0_exdes.xdc
## /___/   / ## \   \  / ##  \___\/\___ ##
##
## USER CONSTRAINTS FILE FOR MGT WRAPPER EXAMPLE DESIGN
## Generated by Xilinx 7 Series FPGAs Transceivers Wizard
##
## Device:  xc7k325t
## Package: ffg900
##
## (c) Copyright 2010-2012 Xilinx, Inc. All rights reserved.
##
## This file contains confidential and proprietary information
## of Xilinx, Inc. and is protected under U.S. and
## international copyright and other intellectual property
## laws.
##
## DISCLAIMER
## This disclaimer is not a license and does not grant any
## rights to the materials distributed herewith. Except as
## otherwise provided in a valid license issued to you by
## Xilinx, and to the maximum extent permitted by applicable
## law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
## WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
## AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
## BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
## INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
## (2) Xilinx shall not be liable (whether in contract or tort,
## including negligence, or under any other theory of
## liability) for any loss or damage of any kind or nature
## related to, arising under or in connection with these
## materials, including for any direct, or any indirect,
## special, incidental, or consequential loss or damage
## (including loss of data, profits, goodwill, or any type of
## loss or damage suffered as a result of any action brought
## by a third party) even if such damage or loss was
## reasonably foreseeable or Xilinx had been advised of the
## possibility of the same.
##
## CRITICAL APPLICATIONS
## Xilinx products are not designed or intended to be fail-
## safe, or for use in any application requiring fail-safe
## performance, such as life-support or safety devices or
## systems, Class III medical devices, nuclear facilities,
## applications related to the deployment of airbags, or any
## other applications that could lead to death, personal
## injury, or severe property or environmental damage
## (individually and collectively, "Critical
## Applications"). Customer assumes the sole risk and
## liability of any use of Xilinx products in Critical
## Applications, subject only to applicable laws and
## regulations governing limitations on product liability.
##
## THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
## PART OF THIS FILE AT ALL TIMES.


################################## Clock Constraints ##########################


####################### GT reference clock constraints #########################


create_clock -period 6.250 [get_ports SMA_MGT_REFCLK_P]





#create_clock -name drpclk_in_i -period 16.667 [get_ports DRP_CLK_IN_P]


# User Clock Constraints


################################# RefClk Location constraints #####################
set_property PACKAGE_PIN J8 [get_ports SMA_MGT_REFCLK_P]
set_property PACKAGE_PIN J7 [get_ports SMA_MGT_REFCLK_N]

## LOC constrain for DRP_CLK_P/N

## KC724 board constrain
# set_property LOC C25 [get_ports  DRP_CLK_IN_P]
# set_property LOC B25 [get_ports  DRP_CLK_IN_N]
## KC705 board constrain
#set_property PACKAGE_PIN AD12 [get_ports DRP_CLK_IN_P]
#set_property PACKAGE_PIN AD11 [get_ports DRP_CLK_IN_N]

#set_property IOSTANDARD LVDS [get_ports DRP_CLK_IN_P]
#set_property IOSTANDARD LVDS [get_ports DRP_CLK_IN_N]


################################# mgt wrapper constraints #####################

##---------- Set placement for gt0_gtx_wrapper_i/GTXE2_CHANNEL ------
#set_property LOC GTXE2_CHANNEL_X0Y8 [get_cells gtwizard_0_support_i/gtwizard_0_init_i/inst/gtwizard_0_i/gt0_gtwizard_0_i/gtxe2_i]
##
#NET "TXP_OUT" LOC = K2;
#NET "TXN_OUT" LOC = K1;
#NET "RXN_IN" LOC = K5;
#NET "RXP_IN" LOC = K6;
set_property PACKAGE_PIN K5 [get_ports RXN_IN]
set_property PACKAGE_PIN K6 [get_ports RXP_IN]
set_property PACKAGE_PIN K1 [get_ports TXN_OUT]
set_property PACKAGE_PIN K2 [get_ports TXP_OUT]


##---------- Set ASYNC_REG for flop which have async input ----------
##set_property ASYNC_REG TRUE [get_cells -hier -filter {name=~*gt0_frame_gen*system_reset_r_reg}]
##set_property ASYNC_REG TRUE [get_cells -hier -filter {name=~*gt0_frame_check*system_reset_r_reg}]

##---------- Set False Path from one clock to other ----------

#-------------------------------------------------------------< System Clock Interface
# PadFunction: IO_L12P_T1_MRCC_33
set_property IOSTANDARD DIFF_SSTL15 [get_ports SYS_CLK_P]
# PadFunction: IO_L12N_T1_MRCC_33
set_property IOSTANDARD DIFF_SSTL15 [get_ports SYS_CLK_N]
set_property PACKAGE_PIN AD12 [get_ports SYS_CLK_P]
set_property PACKAGE_PIN AD11 [get_ports SYS_CLK_N]
#-------------------------------------------------------------> System Clock Interface

#-------------------------------------------------------------< SGMII clcok for GTP/GTH/GTX
set_property IOSTANDARD LVCMOS25 [get_ports SGMIICLK_Q0_P]
set_property IOSTANDARD LVCMOS25 [get_ports SGMIICLK_Q0_N]
set_property PACKAGE_PIN G8 [get_ports SGMIICLK_Q0_P]
set_property PACKAGE_PIN G7 [get_ports SGMIICLK_Q0_N]
#-------------------------------------------------------------> SGMII clcok

#-------------------------------------------------------------< System reset Interface
# Bank: 33 - GPIO_SW_7 (CPU_RESET)
set_property VCCAUX_IO DONTCARE [get_ports SYS_RST]
set_property IOSTANDARD LVCMOS15 [get_ports SYS_RST]
set_property PACKAGE_PIN AB7 [get_ports SYS_RST]
#-------------------------------------------------------------> System reset Interface

#-------------------------------------------------------------< DIPSw4Bit
# GPIO_DIP_SW0
set_property IOSTANDARD LVCMOS25 [get_ports {DIPSw4Bit[0]}]
set_property PACKAGE_PIN Y29 [get_ports {DIPSw4Bit[0]}]

# GPIO_DIP_SW1
set_property IOSTANDARD LVCMOS25 [get_ports {DIPSw4Bit[1]}]
set_property PACKAGE_PIN W29 [get_ports {DIPSw4Bit[1]}]

# GPIO_DIP_SW2
set_property IOSTANDARD LVCMOS25 [get_ports {DIPSw4Bit[2]}]
set_property PACKAGE_PIN AA28 [get_ports {DIPSw4Bit[2]}]

# GPIO_DIP_SW3
set_property IOSTANDARD LVCMOS25 [get_ports {DIPSw4Bit[3]}]
set_property PACKAGE_PIN Y28 [get_ports {DIPSw4Bit[3]}]
#-------------------------------------------------------------> DIPS24Bit

#-------------------------------------------------------------< Ethernet interface
set_property PACKAGE_PIN L20 [get_ports PHY_RESET_N]
set_property IOSTANDARD LVCMOS25 [get_ports PHY_RESET_N]
set_property PACKAGE_PIN J21 [get_ports MDIO]
set_property IOSTANDARD LVCMOS25 [get_ports MDIO]
set_property PACKAGE_PIN R23 [get_ports MDC]
set_property IOSTANDARD LVCMOS25 [get_ports MDC]

set_property PACKAGE_PIN U28 [get_ports {RGMII_RXD[3]}]
set_property PACKAGE_PIN T25 [get_ports {RGMII_RXD[2]}]
set_property PACKAGE_PIN U25 [get_ports {RGMII_RXD[1]}]
set_property PACKAGE_PIN U30 [get_ports {RGMII_RXD[0]}]
set_property IOSTANDARD LVCMOS25 [get_ports {RGMII_RXD[3]}]
set_property IOSTANDARD LVCMOS25 [get_ports {RGMII_RXD[2]}]
set_property IOSTANDARD LVCMOS25 [get_ports {RGMII_RXD[1]}]
set_property IOSTANDARD LVCMOS25 [get_ports {RGMII_RXD[0]}]

set_property PACKAGE_PIN L28 [get_ports {RGMII_TXD[3]}]
set_property PACKAGE_PIN M29 [get_ports {RGMII_TXD[2]}]
set_property PACKAGE_PIN N25 [get_ports {RGMII_TXD[1]}]
set_property PACKAGE_PIN N27 [get_ports {RGMII_TXD[0]}]
set_property IOSTANDARD LVCMOS25 [get_ports {RGMII_TXD[3]}]
set_property IOSTANDARD LVCMOS25 [get_ports {RGMII_TXD[2]}]
set_property IOSTANDARD LVCMOS25 [get_ports {RGMII_TXD[1]}]
set_property IOSTANDARD LVCMOS25 [get_ports {RGMII_TXD[0]}]

set_property PACKAGE_PIN M27 [get_ports RGMII_TX_CTL]
set_property PACKAGE_PIN K30 [get_ports RGMII_TXC]
set_property IOSTANDARD LVCMOS25 [get_ports RGMII_TX_CTL]
set_property IOSTANDARD LVCMOS25 [get_ports RGMII_TXC]
set_property PACKAGE_PIN R28 [get_ports RGMII_RX_CTL]
set_property IOSTANDARD LVCMOS25 [get_ports RGMII_RX_CTL]
set_property PACKAGE_PIN U27 [get_ports RGMII_RXC]
set_property IOSTANDARD LVCMOS25 [get_ports RGMII_RXC]

# already set in ip / tri_mode_ethernet_mac_0.xdc
# create_clock -period 8 [get_ports RGMII_RXC]
set_clock_groups -asynchronous -group [get_clocks -include_generated_clocks -of_objects [get_ports RGMII_RXC]] -group [get_clocks -include_generated_clocks sgmii_clock]

set_property IODELAY_GROUP tri_mode_ethernet_mac_iodelay_grp [get_cells -hier -filter {name =~ *trimac_fifo_block/trimac_sup_block/tri_mode_ethernet_mac_idelayctrl_common_i}]

# If TEMAC timing fails, use the following to relax the requirements
# The RGMII receive interface requirement allows a 1ns setup and 1ns hold - this is met but only just so constraints are relaxed
#set_input_delay -clock [get_clocks tri_mode_ethernet_mac_0_rgmii_rx_clk] -max -1.5 [get_ports {rgmii_rxd[*] rgmii_rx_ctl}]
#set_input_delay -clock [get_clocks tri_mode_ethernet_mac_0_rgmii_rx_clk] -min -2.8 [get_ports {rgmii_rxd[*] rgmii_rx_ctl}]
#set_input_delay -clock [get_clocks tri_mode_ethernet_mac_0_rgmii_rx_clk] -clock_fall -max -1.5 -add_delay [get_ports {rgmii_rxd[*] rgmii_rx_ctl}]
#set_input_delay -clock [get_clocks tri_mode_ethernet_mac_0_rgmii_rx_clk] -clock_fall -min -2.8 -add_delay [get_ports {rgmii_rxd[*] rgmii_rx_ctl}]

# the following properties can be adjusted if requried to adjust the IO timing
# the value shown (12) is the default used by the IP
# increasing this value will improve the hold timing but will also add jitter.
# set_property IDELAY_VALUE 12 [get_cells -hier -filter {name =~ *trimac_fifo_block/trimac_sup_block/tri_mode_ethernet_mac_i/*/rgmii_interface/delay_rgmii_rx* *trimac_fifo_block/trimac_sup_block/tri_mode_ethernet_mac_i/*/rgmii_interface/rxdata_bus[*].delay_rgmii_rx*}]
set_property IDELAY_VALUE 10 [get_cells -hier -filter {name =~ *trimac_fifo_block/trimac_sup_block/tri_mode_ethernet_mac_i/*/rgmii_interface/delay_rgmii_rx*}]
set_property IDELAY_VALUE 10 [get_cells -hier -filter {name =~ *trimac_fifo_block/trimac_sup_block/tri_mode_ethernet_mac_i/*/rgmii_interface/rxdata_bus[*].delay_rgmii_rx*}]

# FIFO Clock Crossing Constraints
# control signal is synched separately so this is a false path
set_max_delay -datapath_only -from [get_cells -hier -filter {name =~ *tx_fifo_i/rd_addr_txfer_reg[*]}] -to [get_cells -hier -filter {name =~ *fifo*wr_rd_addr_reg[*]}] 6.000
set_max_delay -datapath_only -from [get_cells -hier -filter {name =~ *rx_fifo_i/rd_addr_reg[*]}] -to [get_cells -hier -filter {name =~ *fifo*wr_rd_addr_reg[*]}] 6.000
set_max_delay -datapath_only -from [get_cells -hier -filter {name =~ *rx_fifo_i/wr_store_frame_tog_reg}] -to [get_cells -hier -filter {name =~ *fifo_i/resync_wr_store_frame_tog/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells -hier -filter {name =~ *rx_fifo_i/update_addr_tog_reg}] -to [get_cells -hier -filter {name =~ *rx_fifo_i/sync_rd_addr_tog/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells -hier -filter {name =~ *tx_fifo_i/wr_frame_in_fifo_reg}] -to [get_cells -hier -filter {name =~ *tx_fifo_i/resync_wr_frame_in_fifo/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells -hier -filter {name =~ *tx_fifo_i/wr_frames_in_fifo_reg}] -to [get_cells -hier -filter {name =~ *tx_fifo_i/resync_wr_frames_in_fifo/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells -hier -filter {name =~ *tx_fifo_i/frame_in_fifo_valid_tog_reg}] -to [get_cells -hier -filter {name =~ *tx_fifo_i/resync_fif_valid_tog/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells -hier -filter {name =~ *tx_fifo_i/rd_txfer_tog_reg}] -to [get_cells -hier -filter {name =~ *tx_fifo_i/resync_rd_txfer_tog/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells -hier -filter {name =~ *tx_fifo_i/rd_tran_frame_tog_reg}] -to [get_cells -hier -filter {name =~ *tx_fifo_i/resync_rd_tran_frame_tog/data_sync_reg0}] 6.000

# False paths for async reset removal synchronizers
set_false_path -to [get_pins -of_objects [get_cells -hierarchical -filter {NAME =~ *tri_mode_ethernet*reset_sync*}] -filter {NAME =~ *PRE}]

#-------------------------------------------------------------> Ethernet interface

#-------------------------------------------------------------< IIC Interface
set_property PACKAGE_PIN AB25 [get_ports SDA]
set_property IOSTANDARD LVCMOS25 [get_ports SDA]

set_property PACKAGE_PIN AB28 [get_ports SCL]
set_property IOSTANDARD LVCMOS25 [get_ports SCL]




